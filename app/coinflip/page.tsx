'use client';
import React, { useState } from 'react';
import Image from "next/image";
import { Randomness } from 'randomness-js'
import { BrowserProvider } from 'ethers'
import { useWalletClient } from 'wagmi'
import { getBytes } from "ethers"
import { useAccount } from 'wagmi';
import Header from './header';
import Wallet from '../wallet';

export default function CoinFlip() {

    const { isConnected } = useAccount();
    const [result, setResult] = useState(0);
    const [error, setError] = useState<string | null>(null);
    const { data: walletClient } = useWalletClient()

    const getSigner = async () => {
        if (!walletClient) return null

        // Create an ethers v6 provider from the walletClient
        const provider = new BrowserProvider(walletClient.transport)

        // Get the signer
        return await provider.getSigner()
    }


    const generateRandomNumber = async () => {
        try {
            setError(null); // Clear any previous errors
            const signer = await getSigner()
            if (!signer) {
                setError("No wallet connected. Please connect your wallet first.");
                return
            }

            const randomness = Randomness.createBaseSepolia(signer)
            const response = await randomness.requestRandomness()
            const bytes = getBytes(response.randomness)

            if (bytes.length === 0) {
                setError("Failed to generate random number. Please try again.");
                return
            }
            
            setResult(bytes[0] % 2 === 0 ? 1 : 2)
        } catch (error) {
            console.error("Error in generateRandomNumber:", error)
            setError("Failed to generate random number. Please try again.");
        }
    }

    return (

        <>
            {isConnected ? <>
                <Header />
                <div className="min-h-screen bg-black-pattern flex flex-col relative">
                    <main className="flex-grow mt-8">
                        <div className="container mx-auto px-4 py-12">
                            {error && (
                                <div className="mb-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded">
                                    {error}
                                </div>
                            )}
                            <div className="flex flex-col lg:flex-row items-center lg:gap-64">
                                {/* Left Side - Text Content */}
                                <div className="w-full lg:w-1/2 space-y-8 text-wrap mt-24">
                                    <h1 className="font-funnel-display text-3xl md:text-4xl font-bold text-white">
                                        Heads or Tails? What&apos;s you call?
                                    </h1>
                                    <p className="font-funnel-display text-lg text-gray-500 font-funnel">
                                        Each coin flip uses a verifiable random number generated by a secure network of trusted nodes.
                                        It&apos;s cryptographically safe, tamperproof, and aligned with blockchain standards, so the result is always fair and provable.
                                    </p>

                                    <div>
                                        <button
                                            onClick={generateRandomNumber}
                                            className="font-funnel-display flex flex-row gap-2 text-red-500 text-2xl font-medium py-3 transition duration-300 transform hover:scale-105">
                                            <Image
                                                src="/assets/images/redarrow.svg"
                                                alt="Description"
                                                width={30}
                                                height={30}
                                                className=""
                                            />
                                            Spin The Coin
                                        </button>
                                    </div>
                                </div>

                                {/* Right Side - Graphic Area */}
                                <div className="w-full lg:w-1/2 justify-center items-center">
                                    <div className="w-full aspect-square max-w-md flex items-center justify-center">
                                        {result == 0 &&
                                            <Image
                                                src="/assets/images/question.png"
                                                alt="Description"
                                                width={400}
                                                height={400}
                                                className="animate-pulse"
                                            />
                                        }
                                        {result == 1 &&
                                            <Image
                                                src="/assets/images/heads.png"
                                                alt="Description"
                                                width={400}
                                                height={400}
                                                className=""
                                            />
                                        }
                                        {result == 2 &&
                                            <Image
                                                src="/assets/images/tails.png"
                                                alt="Description"
                                                width={400}
                                                height={400}
                                                className=""
                                            />
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </main>
                </div>
            </> : <>
                <Wallet />
            </>}
        </>

    );
}